id  : ContactForm
key : contactform
name: Contact Form
version: 1.8
schema_version: 1.093
author_name: Alfasado Inc.
author_link: 'http://alfasado.net/'
description: '<__trans phrase="Create and manage contact form.">'
l10n_class: ContactForm::L10N
config_settings:
    ContactFormScript:
        default: mt-contactform.cgi
    DefaultFormStatus:
        default: 2

# TODO/ Document
# TODO/ Test

listing_screens:
    contactform:
        object_label: Form Elements
        primary: name
        default_sort_key: name
        condition: $contactform::ContactForm::Plugin::_formelement_permission
        view:
            - system
    contactformgroup:
        object_label: Manage Forms
        primary: name
        default_sort_key: name
        condition: $contactform::ContactForm::Plugin::_contactform_permission
        view:
            - system
            - website
            - blog
    feedback:
        object_label: Manage Form Feedback
        primary: value
        default_sort_key: created_on
        condition: $contactform::ContactForm::Plugin::_feedback_permission
        view:
            - system
            - website
            - blog
list_properties:
    contactform: $contactform::ContactForm::Listing::list_props
    contactformgroup: $contactform::ContactForm::Listing::list_props_group
    feedback: $contactform::ContactForm::Listing::list_props_feedback
list_actions:
    contactform: $contactform::ContactForm::Listing::list_actions
    contactformgroup: $contactform::ContactForm::Listing::list_actions_group
    feedback: $contactform::ContactForm::Listing::list_actions_feedback
content_actions:
    contactform: $contactform::ContactForm::Listing::content_actions
system_filters:
    contactformgroup: $contactform::ContactForm::Listing::system_filters
    feedback: $contactform::ContactForm::Listing::system_filters_feedback
permissions:
    system.manage_formelement:
        label: Manage Form Element
        order: 1000
    blog.manage_contactform:
        label: Form Administrator
        group: blog_admin
        order: 1000
    blog.manage_form_feedback:
        label: Manage Feedback Data
        group: blog_admin
        order: 1001
tasks:
    contactform_tasks:
        label: Form Check Limit
        code: $contactform::ContactForm::Plugin::_scheduled_task
        priority: 5
        frequency: 180
    contactform_adjust_order:
        label: Cleanup order
        code: $contactform::ContactForm::Plugin::_task_adjust_order
        frequency: 180
applications:
    contactform:
        handler: $contactform::MT::App::ContactForm
        methods:
            confirm: $contactform::MT::App::ContactForm::_default
            submit: $contactform::MT::App::ContactForm::_default
            view: $contactform::MT::App::ContactForm::_view
    cms:
        methods:
            # list_contactform: $contactform::ContactForm::Plugin::_list_contactform
            # list_contactformgroup: $contactform::ContactForm::Plugin::_list_contactform
            # list_feedback: $contactform::ContactForm::Plugin::_list_contactform
            status_contactformgroup: $contactform::ContactForm::Plugin::_status_contactformgroup
            upload_contactform_csv: $contactform::ContactForm::Plugin::_upload_contactform_csv
            download_contactform_csv: $contactform::ContactForm::Plugin::_download_contactform_csv
            publish_contactforms: $contactform::ContactForm::Plugin::_publish_contactforms
            unpublish_contactforms: $contactform::ContactForm::Plugin::_unpublish_contactforms
            view_contactform: $contactform::ContactForm::Plugin::_view_contactform
            view_contactformgroup: $contactform::ContactForm::Plugin::_view_contactform
            view_feedback: $contactform::ContactForm::Plugin::_view_contactform
            approve_feedbacks: $contactform::ContactForm::Plugin::_approve_feedbacks
            unapprove_feedbacks: $contactform::ContactForm::Plugin::_unapprove_feedbacks
            addflag2_feedbacks: $contactform::ContactForm::Plugin::_addflag2_feedbacks
            download_feedbacks: $contactform::ContactForm::Plugin::_download_feedbacks
        menus:
            contactform:
                label: Contact Form
                order: 650
            contactform:feedback:
                label: Manage Form Feedback
                mode: list
                args:
                    _type: feedback
                order: 100
                view:
                    - website
                    - blog
                    - system
                condition: $contactform::ContactForm::Plugin::_feedback_permission
            contactform:list_contactformgroup:
                label: Manage Forms
                mode: list
                args:
                    blog_id: 0
                    _type: contactformgroup
                order: 200
                view:
                    - website
                    - blog
                    - system
                condition: $contactform::ContactForm::Plugin::_contactform_permission
            contactform:create_contactformgroup:
                label: Create Form
                mode: view
                args:
                    _type: contactformgroup
                order: 300
                view:
                    - website
                    - blog
                condition: $contactform::ContactForm::Plugin::_contactform_permission
            contactform:list_contactform:
                label: Manage Form Elements
                mode: list
                args:
                    blog_id: 0
                    _type: contactform
                order: 400
                view: system
                condition: $contactform::ContactForm::Plugin::_formelement_permission
            contactform:create_contactform:
                label: New Form Element
                mode: view
                args:
                    _type: contactform
                order: 500
                view: system
                condition: $contactform::ContactForm::Plugin::_formelement_permission
        compose_menus:
            contactformgroup:
                label: Form
                order: 2000
                mode: view
                args:
                    _type: contactformgroup
                view:
                    - website
                    - blog
                condition: $contactform::ContactForm::Plugin::_contactform_permission
search_apis:
    contactform:
        handler: $contactform::ContactForm::Plugin::_search_contactform
        condition: >
            sub {
                return 0 if MT->instance()->blog;
                return 0 unless ContactForm::Plugin::_formelement_permission;
            }
        perm_check: $contactform::ContactForm::Plugin::_formelement_permission
        can_replace: 0
        can_search_by_date: 1
        date_column: created_on
        label: Form Element
        order: 702
        search_cols:
            name: Name
            basename: Basename
            type: Type
            description: Description
        # setup_terms_args: sub { my ( $terms, $args, $blog_id ) = @_; $terms->{ blog_id } = $blog_id if $blog_id; }
        results_table_template: include/contactform_table.tmpl
    contactformgroup:
        handler: $contactform::ContactForm::Plugin::_search_contactform
        # condition: sub { return 1 if MT->instance()->blog; }
        perm_check: $contactform::ContactForm::Plugin::_contactform_permission
        condition: $contactform::ContactForm::Plugin::_contactform_permission
        can_replace: 0
        can_search_by_date: 1
        date_column: created_on
        label: Form
        order: 701
        search_cols:
            name: Name
        setup_terms_args: >
            sub {
                my ( $terms, $args, $blog_id ) = @_;
                require ContactForm::Plugin;
                my $app = MT->instance;
                if ( my $blog = $app->blog ) {
                    if ( $blog->is_blog ) {
                        $terms->{ blog_id } = $blog_id;
                    } else {
                        my @ids;
                        push ( @ids, $blog_id );
                        my $blogs = $blog->blogs;
                        for my $b ( @$blogs ) {
                            if ( ContactForm::Plugin::_contactform_permission( $b ) ) {
                                push ( @ids, $b->id )
                            }
                        };
                        $terms->{ blog_id } = \@ids;
                    }
                } else {
                    if (! $app->user->is_superuser ) {
                        require MT::Blog;
                        my $all_blogs = MT::Blog->load( { class => '*' } );
                        my @ids;
                        for my $b ( @$all_blogs ) {
                            if ( ContactForm::Plugin::_contactform_permission( $b ) ) {
                                push ( @ids, $b->id );
                            }
                        }
                        $terms->{ blog_id } = \@ids;
                    }
                }
            }
        results_table_template: include/contactformgroup_table.tmpl
    feedback:
        handler: $contactform::ContactForm::Plugin::_search_contactform
        # condition: sub { return 1 if MT->instance()->blog; }
        perm_check: $contactform::ContactForm::Plugin::_feedback_permission
        condition: $contactform::ContactForm::Plugin::_feedback_permission
        can_replace: 0
        can_search_by_date: 1
        date_column: created_on
        label: Feedback
        order: 703
        search_cols:
            identifier: Identifier
            email: Email Address
            memo: Memo
            data: Data
        setup_terms_args: >
            sub {
                my ( $terms, $args, $blog_id ) = @_;
                require Campaign::Plugin;
                my $app = MT->instance;
                if ( my $blog = $app->blog ) {
                    if ( $blog->is_blog ) {
                        $terms->{ blog_id } = $blog_id;
                    } else {
                        my @ids;
                        push ( @ids, $blog_id );
                        my $blogs = $blog->blogs;
                        for my $b ( @$blogs ) {
                            if ( ContactForm::Plugin::_feedback_permission( $b ) ) {
                                push ( @ids, $b->id )
                            }
                        };
                        $terms->{ blog_id } = \@ids;
                    }
                } else {
                    if (! $app->user->is_superuser ) {
                        require MT::Blog;
                        my $all_blogs = MT::Blog->load( { class => '*' } );
                        my @ids;
                        for my $b ( @$all_blogs ) {
                            if ( ContactForm::Plugin::_feedback_permission( $b ) ) {
                                push ( @ids, $b->id );
                            }
                        }
                        $terms->{ blog_id } = \@ids;
                    }
                }
            }
        results_table_template: include/feedback_table.tmpl
object_types:
    contactform: ContactForm::ContactForm
    contactformgroup: ContactForm::ContactFormGroup
    contactformorder: ContactForm::ContactFormOrder
    feedback: ContactForm::Feedback
    author:
        can_manage_formelement: 'boolean meta'
customfield_objects:
    contactform:
        context: system
        order: 10000
    contactformgroup:
        context:
            - website
            - blog
        order: 10001
contactform_objects:
    text:
        order: 100
        name: Single-Line Text
        template_type: text
    textarea:
        order: 200
        name: Multi-Line Text
        template_type: textarea
        cms_tmpl: $contactform::ContactForm::Plugin::_cms_tmpl_textarea
    checkbox:
        order: 300
        name: Checkbox
        template_type: checkbox
        validate: $contactform::ContactForm::Plugin::_validate_checkbox
    select:
        order: 400
        name: Drop Down Menu
        template_type: select
        validate: $contactform::ContactForm::Plugin::_validate_select_radio
    radio:
        order: 500
        name: Radio Buttons
        template_type: radio
        validate: $contactform::ContactForm::Plugin::_validate_select_radio
    checkbox-multiple:
        order: 600
        name: Checkbox(Multiple)
        template_type: checkbox-multiple
        validate: $contactform::ContactForm::Plugin::_validate_multi
    select-multiple:
        order: 700
        name: Drop Down Menu(Multiple)
        template_type: select-multiple
        validate: $contactform::ContactForm::Plugin::_validate_multi
    url:
        order: 800
        name: URL
        template_type: text
        validate: $contactform::ContactForm::Plugin::_validate_url
    email:
        order: 900
        name: Email Address
        template_type: text
        validate: $contactform::ContactForm::Plugin::_validate_email
        # confirm: $contactform::ContactForm::Plugin::_confirm_email
        # submit: $contactform::ContactForm::Plugin::_submit_email
    date:
        order: 1000
        name: Date
        template_type: date
        cms_param: $contactform::ContactForm::Plugin::_cms_param_date
        cms_tmpl: $contactform::ContactForm::Plugin::_cms_tmpl_date
        validate: $contactform::ContactForm::Plugin::_validate_date
        format: $contactform::ContactForm::Plugin::_format_date
    date-and-time:
        order: 1100
        name: Date and Time
        template_type: date-and-time
        cms_param: $contactform::ContactForm::Plugin::_cms_param_date
        cms_tmpl: $contactform::ContactForm::Plugin::_cms_tmpl_date_time
        validate: $contactform::ContactForm::Plugin::_validate_date_and_time
        format: $contactform::ContactForm::Plugin::_format_date_and_time
    tel:
        order: 1200
        name: Tel
        template_type: text
        validate: $contactform::ContactForm::Plugin::_validate_tel
    zip-code:
        order: 1300
        name: Zip code
        template_type: text
        validate: $contactform::ContactForm::Plugin::_validate_zip
customfield_types: $contactform::ContactForm::Field::_customfield_types
callbacks:
    init_request:
        handler: $contactform::ContactForm::Plugin::_init_request
    init_app:
        handler: $contactform::ContactForm::Field::_init_tags
        priority: 10
    cms_pre_load_filtered_list.contactformgroup: $contactform::ContactForm::Listing::_cms_pre_load_filtered_list
    cms_pre_load_filtered_list.feedback: $contactform::ContactForm::Listing::_cms_pre_load_filtered_list_feedback
    MT::App::CMS::pre_run: $contactform::ContactForm::Plugin::_pre_run
    MT::App::Upgrader::post_run: $contactform::ContactForm::Plugin::_post_run
    MT::App::CMS::template_param.edit_contactform: $contactform::ContactForm::Plugin::_edit_contactform
    MT::App::CMS::template_param.search_replace: $contactform::ContactForm::Plugin::_serarch_replace_param
    MT::App::CMS::template_output.edit_contactform: $contactform::ContactForm::Plugin::_edit_contactform_out
    MT::App::CMS::template_output.edit_contactformgroup: $contactform::ContactForm::Plugin::_edit_contactform_out
    MT::App::CMS::template_param.edit_contactformgroup: $contactform::ContactForm::Plugin::_edit_contactformgroup
    MT::App::CMS::template_param.edit_feedback: $contactform::ContactForm::Plugin::_edit_feedback
    MT::App::CMS::template_param.edit_author: $contactform::ContactForm::Plugin::_edit_author
    cms_post_save.contactform: CustomFields::App::CMS::CMSPostSave_customfield_objs
    cms_post_save.contactformgroup: CustomFields::App::CMS::CMSPostSave_customfield_objs
    cms_save_filter.contactform: $contactform::ContactForm::Plugin::_cb_cmssavefilter_customfield_objs
    cms_save_filter.contactformgroup: $contactform::ContactForm::Plugin::_cb_cmssavefilter_customfield_objs
    MT::App::CMS::template_source.footer: $contactform::ContactForm::Plugin::_footer_source
    save_permission_filter.contactformorder: sub { MT->instance->error( MT->translate( 'Invalid request.' ) ); }
    delete_permission_filter.contactformorder: sub { MT->instance->error( MT->translate( 'Invalid request.' ) ); }
    restore: $contactform::ContactForm::Plugin::_cb_restore
    tasks:
        - handler: $contactform::ContactForm::Field::_init_tags
          priority: 1
    MT::App::CMS::take_down: >
        sub {
            my $app = MT->instance;
            return 1 unless $app->mode eq 'plugin_control';
            my $plugin = MT->component( 'ContactFormConfig' );
            my $switch = MT->config( 'PluginSwitch' ) || {};
            $switch->{ $plugin->{ plugin_sig } } = 1;
            MT->config( 'PluginSwitch', $switch, 1 );
            MT->config->save_config();
        }
upgrade_functions:
    upgrade_functions_contactform:
        plugin: ContactForm
        code: $contactform::ContactForm::Upgrade::_upgrade_functions
    upgrade_functions_contactform_nv:
        plugin: ContactForm
        version_limit: 2
        code: $contactform::ContactForm::Upgrade::_upgrade_functions
settings:
    template_type_text:
    template_type_textarea:
    template_type_checkbox:
    template_type_select:
    template_type_radio:
    template_type_checkbox-multiple:
    template_type_select-multiple:
    template_type_date:
    template_type_date-and-time:
    throttle:
        Default: 10
tags:
    block:
        ContactForms: $contactform::ContactForm::Tags::_hdlr_contactforms
        IfFormElementRequired?: $contactform::ContactForm::Tags::_hdlr_if_formelement
        IfFormElementValidate?: $contactform::ContactForm::Tags::_hdlr_if_formelement
        IfFormElementColumn?: $contactform::ContactForm::Tags::_hdlr_if_formelement
        FormElementOptions: $contactform::ContactForm::Tags::_hdlr_formelement_options
        IfNotSent?: $contactform::ContactForm::Tags::_hdlr_if_not_sent
        IfContactFormIsOpen?: $contactform::ContactForm::Tags::_hdlr_if_open
        IfContactFormIsClosed?: $contactform::ContactForm::Tags::_hdlr_if_closed
        IfContactFormIsPreOpen?: $contactform::ContactForm::Tags::_hdlr_if_preopen
        IfFeedbackAlreadyPosted?: $contactform::ContactForm::Tags::_hdlr_feedback_already_posted
    function:
        ContactFormScript: $contactform::ContactForm::Tags::_hdlr_contactformscript
        FormElementHTML: $contactform::ContactForm::Tags::_hdlr_formelement_html
        Trans: $contactform::ContactForm::Tags::_hdlr_trans
        ContactFormName: $contactform::ContactForm::Tags::_hdlr_contactform_column
        ContactFormID: $contactform::ContactForm::Tags::_hdlr_contactform_column
        ContactFormColumn: $contactform::ContactForm::Tags::_hdlr_contactform_column
        ContactFormAuthorDisplayName: $contactform::ContactForm::Tags::_hdlr_author_displayname
        FormElementName: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementBasename: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementSize: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementDescription: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementOption: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementDefault: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementType: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FormElementColumn: $contactform::ContactForm::Tags::_hdlr_formelement_column
        FeedbackInformationMessage: $contactform::ContactForm::Tags::_hdlr_form_message
        FeedbackThanksMessage: $contactform::ContactForm::Tags::_hdlr_form_message
        FeedbackConfirmMessage: $contactform::ContactForm::Tags::_hdlr_form_message
        FeedbackErrorMessage: $contactform::ContactForm::Tags::_hdlr_form_message
        FeedbackPreOpenMessage: $contactform::ContactForm::Tags::_hdlr_form_message
        FeedbackClosedMessage: $contactform::ContactForm::Tags::_hdlr_form_message
        ContactFormFieldScope: $contactform::ContactForm::Tags::_hdlr_contactformfieldscope
        FormCMSHTML: $contactform::ContactForm::Tags::_hdlr_cms_html
        FormCMSFormStatusMsg: $contactform::ContactForm::Tags::_hdlr_cms_form_status_msg
        ContactFormStaticLink: $contactform::ContactForm::Tags::_hdlr_contact_form_static_link
        FeedbackCount: $contactform::ContactForm::Tags::_hdlr_feedback_count
    modifier:
        format_ts: $contactform::ContactForm::Tags::_filter_format_ts
backup_instructions:
    contactform:
        order: 540
    contactformgroup:
        order: 550
    contactformorder:
        order: 560
    feedback:
        order: 560
