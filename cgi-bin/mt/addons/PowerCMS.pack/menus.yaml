filter:
    condition: >
        sub {
            return 0;
        }
commenter:
    condition: >
        sub {
            return 0;
        }
user:manage_commenter:
    label: Commenters
    order: 500
    mode: list
    args:
        _type: commenter
    permission: administer
    view: system
    condition: >
        sub {
            return MT->config->SingleCommunity;
        }
user:role:
    label: Roles
    order: 300
    mode: list
    args:
        _type: role
    system_permission: administer
    view: system
user:association:
    label: Permissions
    order: 400
    mode: list
    args:
        _type: association
    system_permission: administer
    view: system
tag:
    condition: >
        sub {
            return 0;
        }
feedback:
    order: 760
tools:
    order: 800
tools:plugins:
    condition: >
        sub {
            return 0;
        }
tools:notification:
    condition: >
        sub {
            return 0;
        }
settings:
    order: 900
settings:notification:
    label: Address Book
    order: 150
    mode: list
    args:
        _type: notification
    condition: >
        sub {
            my $app = MT->instance();
            return 0 unless $app->config->EnableAddressBook;
            return 1 if $app->user->is_superuser;
    
            my $blog = $app->blog;
            my $blog_ids
                = !$blog         ? undef
                : $blog->is_blog ? [ $blog->id ]
                :   [ $blog->id, map { $_->id } @{ $blog->blogs } ];
    
            require MT::Permission;
            my $iter = MT::Permission->load_iter(
                {   author_id => $app->user->id,
                    (   $blog_ids
                        ? ( blog_id => $blog_ids )
                        : ( blog_id => { not => 0 } )
                    ),
                }
            );
    
            my $cond;
            while ( my $p = $iter->() ) {
                $cond = 1, last
                    if $p->can_do('edit_notifications');
            }
            return $cond ? 1 : 0;
        }
    view:
        - system
        - website
        - blog
settings:filter:
    label: Listing Filters
    order: 250
    mode: list
    args:
        _type: filter
    view: system
    system_permission: administer
settings:user:
    label: User Registration
settings:plugins:
    label: Plugins
    order: 1000
    mode: cfg_plugins
    permission: administer_blog
    system_permission: manage_plugins
    view:
        - blog
        - website
        - system
settings:role:
    condition: >
        sub {
            return 0;
        }
settings:association:
    condition: >
        sub {
            return 0;
        }
settings:powercms_config:
    label: PowerCMS
    mode: powercms_config
    order: 1100
    view:
        - system
        - blog
        - website
    permission: administer_blog
    system_permission: administer
entry:edit_tags:
    label: Tags
    mode: list
    args:
        _type: tag
        filter_key: entry
    order: 700
    view:
        - blog
    permission: edit_tags
page:edit_tags:
    label: Tags
    mode: list
    args:
        _type: tag
        filter_key: page
    order: 700
    view:
        - website
        - blog
    permission: edit_tags
asset:edit_tags:
    label: Tags
    mode: list
    args:
        _type: tag
        filter_key: asset
    order: 700
    view:
        - website
        - blog
    permission: edit_tags
tools:entry_unpublish:
    label: Unpublish Entry
    mode: entry_unpublish
    order: 1900
    view:
        - system
        - website
        - blog
    permission: publish_post
    system_permission: administer
tools:refresh_cache:
    label: Refresh Cache
    mode: refresh_cache
    order: 2000
    view:
        - system
        - website
        - blog
    permission: administer_blog,administer_website
    system_permission: administer
