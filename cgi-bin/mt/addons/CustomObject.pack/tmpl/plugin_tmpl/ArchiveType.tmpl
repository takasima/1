package ArchiveType::<mt:var name="plugin_id">;

use strict;
use base qw( ArchiveType::CustomObject );

sub name {
    return '<mt:var name="plugin_id">';
}

sub archive_label {
    my $plugin = MT->component( '<mt:var name="plugin_id">' );
    return $plugin->translate( '<mt:var name="plugin_id">' );
}

sub default_archive_templates {
    return [
        {   label    => 'folder_path/<mt:var name="class">/<mt:var name="class">_basename.html',
            template => '%c/<mt:var name="class">/%f',
            default  => 1
        },
        {   label    => '<mt:var name="class">/<mt:var name="class">_basename.html',
            template => '<mt:var name="class">/%f',
        },
    ];
}

sub template_params {
    return {
        archive_class         => 'customobject-archive',
        customobject_class    => '<mt:var name="class">',
        customobject_archive  => 1,
        archive_template      => 1,
    };
}

sub archive_group_iter {}
sub archive_group_entries {}
sub archive_entries_count { return 0; }

1;