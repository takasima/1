<mt:setvarblock name="html_head" append="1">
<link rel="stylesheet" href="<$mt:var name="static_uri"$>plugins/ExtFields/css/extfields.css" />
<style type="text/css">
<mt:if name="compact_attachfile">
.extfield-extend-field { display:none !important; }
</mt:if>
</style>
<script type="text/javascript">
<MTJSCompressor config="1">
var isIE = (document.documentElement.getAttribute("style") == document.documentElement.style);
var static_url = '<$mt:var name="static_uri"$>';
jQuery(function(jQuery) {
    <mt:if name="hide_extfields">
    jQuery('#ext-field-label')
        .addClass('toggle-ext-field close')
        .click(function() {
            jQuery('#ext-flelds-area').toggle();
            jQuery(this)
                .toggleClass('open')
                .toggleClass('close');
        });
    jQuery('#ext-flelds-area').hide();
    </mt:if>
        jQuery('input.text-date')
            .datepicker({
                dateFormat         : 'yy-mm-dd',
                dayNamesMin        : ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
                monthNames         : ['-01','-02','-03','-04','-05','-06','-07','-08','-09','-10','-11','-12'],
                showMonthAfterYear : true,
                prevText           : '&lt;',
                nextText           : '&gt;'
            });
});
function toggleExtFieldsOptions() {
    var obj = document.getElementById('ext-fields-options');
    if (obj.style.display == 'block') {
        document.getElementById('newFldLabel').value = '';
        document.getElementById('newFldType').selectedIndex = 0;
        obj.style.display = 'none';
    } else {
        obj.style.display = 'block';
        document.getElementById('newFldLabel').focus();
    }
}

var formatValueToString = {
    1  : '0',
    2  : '__default__',
    11 : 'markdown',
    12 : 'markdown_with_smartypants',
    9  : 'richtext',
    13 : 'textile_2'
};
</MTJSCompressor>
</script>
<script language="javascript" type="text/javascript">

//=========================================================
//    textareaCustom
//=========================================================
var textareaCustom = function(ele, textareaID){
    var fldProperty = textareaID.split('-');
    fldProperty = fldProperty[2]
    var elm = jQuery("#" + textareaID);
    elm.data('mt-editor').setFormat(formatValueToString[ele.value]);
}

//=========================================================
//    check format TinyMCE
//=========================================================
jQuery(function($){
    $('.ext-field-formatselect').each(function(){
        var nm = this.id.split('-textformat')[0];
        if(nm.match('file')){
            nm = nm + '-desctext';
        }
        new MT.EditorManager(nm, {
            format: formatValueToString[this.value]
        });
    });
});

function overwrite_extfile (obj, id1, id2, id3, cb){
    var tg1 = jQuery("#" + id1);
    var tg2 = jQuery("#" + id2);
    var tg3 = jQuery("#" + id3);
    var cb  = jQuery("#" + cb);
    if (obj.checked) {
        tg1.removeAttr('disabled');
        tg2.removeAttr('disabled');
        tg3.removeAttr('disabled');
        cb.removeAttr('checked');
    } else {
        tg1.attr('disabled','disabled');
        tg2.attr('disabled','disabled');
        tg3.attr('disabled','disabled');
    }
}
function remove_extfile (obj, id1, id2, id3, cb){
    var tg1 = jQuery("#" + id1);
    var tg2 = jQuery("#" + id2);
    var tg3 = jQuery("#" + id3);
    var cb  = jQuery("#" + cb);
    if (obj.checked) {
        tg1.attr('disabled','disabled');
        tg2.attr('disabled','disabled');
        tg3.attr('disabled','disabled');
        cb.removeAttr('checked');
    }
}
</script>
</mt:setvarblock>
<mt:setvarblock name="related_content" append="1">
</mt:setvarblock>