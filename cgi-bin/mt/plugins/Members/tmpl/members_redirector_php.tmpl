<?php
    // ini_set( 'memory_limit', '99999999' );
    $blog_id = <mt:blogid>;
    $mt_dir = '<mt:cgiserverpath>';
    include( $mt_dir . '/php/mt.php' );

    $mt = MT::get_instance( $blog_id, $mt_dir . 'mt-config.cgi' );
    set_error_handler( array( &$mt, 'error_handler' ) );

    if ( isset( $_COOKIE['mt_user'] ) ) {
        $cookie = $_COOKIE[ 'mt_user' ];
        if ( preg_match( '/^(.*?)::(.*?)::.*$/', $cookie, $match ) ) {
            $sess_id = $match[ 2 ];
        } else {
            $sess_id = $_GET[ 'sessid' ];
        }
        $name = 'US';
    } else if ( isset( $_COOKIE['mt_commenter'] ) ) {
        $sess_id = $_COOKIE[ 'mt_commenter' ];
        $name = 'SI';
    } else if ( isset( $_COOKIE[ 'mt_blog_user' ] ) ) {
        $cookie = $_COOKIE[ 'mt_blog_user' ];
        if ( preg_match( "/sid:.'(.*?).'.*?$/", $cookie, $match ) ) {
            $sess_id = $match[ 1 ];
        }
        $name = 'US';
    } else {
        $sess_id = $_GET[ 'sessid' ];
        $name = 'US';
    }
    if ( $sess_id != '' ) {
        $param = getenv( 'REDIRECT_QUERY_STRING' );
        parse_str( $param );

        $sql = "SELECT * FROM mt_session WHERE session_id = '$sess_id' and session_kind = '{$name}'";

        $results = $mt->db()->Execute($sql);

        if ( isset( $results ) ) {
            $sess_obj = empty( $results ) ? NULL : $results;
            $user_id = 0;
            $user = NULL;
            $sess_data = $sess_obj->fields['session_data'];

            if ( $sess_obj && $sess_data ) {
                $data = $mt->db()->unserialize( $sess_data );
                if ( $data ) {
                    $author_id = $data[ 'author_id' ];

                    if ( $author_id ) {
                        require_once ( 'class.mt_permission.php' );

                        $Permission = new Permission;
                        $where = "permission_author_id = '{$author_id}'"
                               . " and ("
                               . " permission_blog_id = '{$blog_id}'"
                               . " or permission_blog_id = 0"
                               . ")";
                        $results = $Permission->Find( $where );

                        if( ! empty( $results ) ) {
                            $perm_obj = $results[ 0 ];
                            if ( preg_match( "/'create_post'/", $perm_obj->permissions, $match ) ) {
                                $goto = $_GET[ 'goto' ];

                                if ( $goto != '' ) {
                                    $goto = encode_php( $goto );
                                    header( "HTTP/1.1 302 Found" );
                                    header( "Location: " . $goto );
                                    exit();
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    echo "<h1>Forbidden</h1>";
    exit();
    function encode_php( $text, $type ) {
        switch ( $type ) {
            case 'qq':
                $out = encode_phphere( $text );
                $out = str_replace( '"', '\"', $out );
                break;
            case 'here':
                $out = encode_phphere( $text );
                break;
            default:  // 'q'
                $out = str_replace("\\", "\\\\", $text);
                $out = str_replace( "'", "\\'", $out );
                break;
        }
        return $out;
    }
    function encode_phphere( $text ) {
        $out = str_replace( "\\", "\\\\", $text );
        $out = str_replace( '$', '\$', $out );
        $out = str_replace( "\n", '\n', $out );
        $out = str_replace( "\r", '\r', $out );
        $out = str_replace( "\t", '\t', $out);
        return $out;
    }
?>